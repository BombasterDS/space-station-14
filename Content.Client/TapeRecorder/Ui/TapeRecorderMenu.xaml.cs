using Content.Client.UserInterface.Controls;
using Content.Shared.TapeRecorder;
using Content.Shared.TapeRecorder.Components;
using Content.Shared.TapeRecorder.Events;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.TapeRecorder.Ui;

[GenerateTypedNameReferences]
public sealed partial class TapeRecorderMenu : FancyWindow
{ 
    private readonly ButtonGroup _controlButtons = new();
    private readonly ButtonGroup _modeButtons = new();
    private readonly TapeRecorderBoundUserInterface _owner;
    public TapeRecorderMenu(TapeRecorderBoundUserInterface owner)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _owner = owner;

        PlayButton.Group = _controlButtons;
        StopButton.Group = _controlButtons;

        PlayButton.OnPressed += _ => _owner.ToggleSwitch(true);
        StopButton.OnPressed += _ => _owner.ToggleSwitch(false);

        RewindButton.Group = _modeButtons;
        RecordButton.Group = _modeButtons;
        PlaybackButton.Group = _modeButtons;

        RewindButton.OnPressed += _ => _owner.ChangeMode(TapeRecorderMode.Rewinding);
        RecordButton.OnPressed += _ => _owner.ChangeMode(TapeRecorderMode.Recording);
        PlaybackButton.OnPressed += _ => _owner.ChangeMode(TapeRecorderMode.Playing);
    }

    public void UpdateState(TapeRecorderState state)
    {
        // Checking cassette. If no - blocks all buttons
        if (!state.HasCasette)
        {
            PlayButton.Disabled = true;
            StopButton.Disabled = true;
            RewindButton.Disabled = true;
            RecordButton.Disabled = true;
            PlaybackButton.Disabled = true;
            PrintButton.Disabled = true;
        }
        else
        {
            PlayButton.Disabled = false;
            StopButton.Disabled = false;
            RewindButton.Disabled = false;
            RecordButton.Disabled = false;
            PlaybackButton.Disabled = false;
        }

        // Checking cassete data and enabling/disabling print function
        if (state.HasData)
            PrintButton.Disabled = false;
        else
            PrintButton.Disabled = true;


        // Checking if playbutton pressed. If it is - blocking mode change buttons.
        if (state.Active)
        {
            PlayButton.Pressed = true;
            RewindButton.Disabled = true;
            RecordButton.Disabled = true;
            PlaybackButton.Disabled = true;
        }
        else
        {
            StopButton.Pressed = true;
            RewindButton.Disabled = false;
            RecordButton.Disabled = false;
            PlaybackButton.Disabled = false;
        }

        // Checking mode and enabling button to make it glow
        switch (state.Mode)
        {
            case TapeRecorderMode.Recording:
                {
                    RecordButton.Disabled = false;
                    RecordButton.Pressed = true;
                    break;
                }
            case TapeRecorderMode.Rewinding:
                {
                    RewindButton.Disabled = false;
                    RewindButton.Pressed = true;
                    break;
                }
            case TapeRecorderMode.Playing:
                {
                    PlaybackButton.Disabled = false;
                    PlaybackButton.Pressed = true;
                    break;
                }
            default:
                break;
        }
    }
}
